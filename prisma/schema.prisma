// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// patient -> checkedBy <- Doctor --many to many 
model Patient {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  password    String
  contactNo   BigInt[]
  dateOfBirth DateTime
  age         Int
  gender      String
  address     String
  isAlive     Boolean
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  CheckedBy   CheckedBy[]
  Visit       Visits[]
  Records     Records[]
}

model Doctor {
  id            String      @id @default(uuid())
  name          String
  email         String
  password      String
  contactNo     BigInt[]
  qualification String
  address       String
  gender        String
  age           Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  CheckedBy     CheckedBy[]
}

model CheckedBy {
  patient   Patient @relation(fields: [patientId], references: [id])
  patientId String
  doctor    Doctor  @relation(fields: [doctorId], references: [id])
  doctorId  String

  @@unique([patientId, doctorId])
}

// Patient -> visits <- Hospital -- many to many
model Hospital {
  id        String   @id @default(uuid())
  name      String
  email     String
  password  String
  address   String
  contactNo BigInt[]
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Visits    Visits[]
}

model Visits {
  patient    Patient  @relation(fields: [patientId], references: [id])
  patientId  String
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId String

  @@unique([patientId, hospitalId])
}

// patient has records -- one to many
model Records {
  id          String   @id @default(uuid())
  medicines   String[]
  disease     String
  description String
  createdAt   DateTime @default(now())
  patient     Patient  @relation(fields: [patientId], references: [id])
  patientId   String
}
